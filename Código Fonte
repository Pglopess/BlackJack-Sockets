import socket
import random

def gerar_carta():
    """ Gera um valor de carta entre 1 e 13, convertendo figuras para 10 e Ás para 11. """
    carta = random.randint(1, 13)
    return 10 if carta > 10 else 11 if carta == 1 else carta

def calcular_total(cartas):
    """ Calcula o total das cartas considerando a mecânica do Ás (11 ou 1). """
    total = sum(cartas)
    num_ases = cartas.count(11)
    
    while total > 21 and num_ases:
        total -= 10  # Converte um Ás de 11 para 1
        num_ases -= 1
    
    return total

def enviar_para_ambos(cliente1, cliente2, mensagem):
    """ Envia uma mensagem para ambos os jogadores. """
    cliente1.send(mensagem.encode())
    cliente2.send(mensagem.encode())

def rodada_jogador(cliente, jogador_num):
    """ Realiza a rodada de um jogador, permitindo que peça cartas ou pare. """
    cartas = [gerar_carta(), gerar_carta()]
    total = calcular_total(cartas)
    
    cliente.send(f"Suas cartas iniciais: {cartas} (Total: {total})\n".encode())
    
    while total < 21:
        cliente.send("Deseja pedir outra carta? (h para hit, s para stand)\n".encode())
        resposta = cliente.recv(1024).decode().strip().lower()
        
        if resposta == 'h':
            cartas.append(gerar_carta())
            total = calcular_total(cartas)
            cliente.send(f"Suas cartas: {cartas} (Total: {total})\n".encode())
            if total > 21:
                cliente.send("Você estourou! (Busted)\n".encode())
                break
        elif resposta == 's':
            break
    
    return total

def jogar_como_dealer():
    """ Define a jogada do Dealer seguindo as regras do Blackjack. """
    cartas = [gerar_carta(), gerar_carta()]
    total = calcular_total(cartas)
    
    while total < 17:
        cartas.append(gerar_carta())
        total = calcular_total(cartas)
    
    return cartas, total

def obter_aposta(cliente, saldo):
    """ Obtém uma aposta válida do jogador. """
    while True:
        try:
            cliente.send(f"Seu saldo atual: {saldo}\nQuanto deseja apostar? ".encode())
            aposta = int(cliente.recv(1024).decode().strip())
            if 0 < aposta <= saldo:
                return aposta
            cliente.send("Aposta inválida. Tente novamente.\n".encode())
        except ValueError:
            cliente.send("Entrada inválida. Digite um número.\n".encode())

def blackjack():
    host, port = '127.0.0.1', 12345
    servidor = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    servidor.bind((host, port))
    servidor.listen(2)
    
    print("Aguardando dois jogadores...")
    cliente1, addr1 = servidor.accept()
    print(f"Jogador 1 conectado: {addr1}")
    cliente2, addr2 = servidor.accept()
    print(f"Jogador 2 conectado: {addr2}")
    
    saldo_jogador1, saldo_jogador2 = 100, 100
    
    while True:
        enviar_para_ambos(cliente1, cliente2, "\n=== Nova rodada de Blackjack ===\n")
        
        aposta_jogador1 = obter_aposta(cliente1, saldo_jogador1)
        aposta_jogador2 = obter_aposta(cliente2, saldo_jogador2)
        
        cartas_dealer, total_dealer = jogar_como_dealer()
        enviar_para_ambos(cliente1, cliente2, f"Primeira carta do Dealer: {cartas_dealer[0]}\n")
        
        total_jogador1 = rodada_jogador(cliente1, 1)
        total_jogador2 = rodada_jogador(cliente2, 2)
        
        enviar_para_ambos(cliente1, cliente2, f"\nCartas do Dealer: {cartas_dealer} (Total: {total_dealer})\n")
        
        def determinar_resultado(cliente, total_jogador, aposta, saldo):
            if total_jogador > 21:
                cliente.send(f"Você estourou! Perdeu {aposta}.\n".encode())
                return saldo - aposta
            if total_dealer > 21 or total_jogador > total_dealer:
                cliente.send(f"Você venceu! Ganhou {aposta * 2}.\n".encode())
                return saldo + aposta * 2
            cliente.send(f"Você perdeu! Perdeu {aposta}.\n".encode())
            return saldo - aposta
        
        saldo_jogador1 = determinar_resultado(cliente1, total_jogador1, aposta_jogador1, saldo_jogador1)
        saldo_jogador2 = determinar_resultado(cliente2, total_jogador2, aposta_jogador2, saldo_jogador2)
        
        enviar_para_ambos(cliente1, cliente2, "Desejam continuar jogando? (s/n)\n")
        if cliente1.recv(1024).decode().strip().lower() != 's' or cliente2.recv(1024).decode().strip().lower() != 's':
            break
    
    cliente1.close()
    cliente2.close()
    servidor.close()
    print("Jogo encerrado.")

if __name__ == "__main__":
    blackjack()
